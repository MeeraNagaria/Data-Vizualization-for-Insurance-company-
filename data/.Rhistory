install.packages(c("cachem", "caret", "cli", "colorspace", "curl", "data.table", "digest", "dplyr", "e1071", "fansi", "gtools", "haven", "htmltools", "httpuv", "ipred", "isoband", "jpeg", "later", "lme4", "lubridate", "maptools", "matrixStats", "mime", "openssl", "openxlsx", "pillar", "pROC", "proxy", "quantreg", "Rcpp", "RcppArmadillo", "readr", "rvest", "stringi", "tibble", "tidyr", "tzdb", "utf8", "vroom", "xfun", "zip"))
install.packages(c("cachem", "caret", "cli", "colorspace", "curl", "data.table", "digest", "dplyr", "e1071", "fansi", "gtools", "haven", "htmltools", "httpuv", "ipred", "isoband", "jpeg", "later", "lme4", "lubridate", "maptools", "matrixStats", "mime", "openssl", "openxlsx", "pillar", "pROC", "proxy", "quantreg", "Rcpp", "RcppArmadillo", "readr", "rvest", "stringi", "tibble", "tidyr", "tzdb", "utf8", "vroom", "xfun", "zip"))
install.packages(c("cachem", "caret", "cli", "colorspace", "curl", "data.table", "digest", "dplyr", "e1071", "fansi", "gtools", "haven", "htmltools", "httpuv", "ipred", "isoband", "jpeg", "later", "lme4", "lubridate", "maptools", "matrixStats", "mime", "openssl", "openxlsx", "pillar", "pROC", "proxy", "quantreg", "Rcpp", "RcppArmadillo", "readr", "rvest", "stringi", "tibble", "tidyr", "tzdb", "utf8", "vroom", "xfun", "zip"))
Insurance %>%
group_by(region) %>%
summarise(smoker) %>% table()
library(dplyr)
library(magrittr)
library(tidyr)
library(DAAG)
library(ggplot2)
library(lubridate)
library(GGally)
Insurance = read.csv('insurance.csv')
Conversion_rates=read.csv('conversion_rates.csv')
Insurance %>%
group_by(region) %>%
summarise(
count = n(),
min = min(charges),
median = median(charges),
mean = mean(charges),
std = sd(charges),
max = max(charges),
IQR = IQR(charges)
) %>%
arrange(desc(median))
Insurance %>%
group_by(region) %>%
summarise(smoker) %>% table()
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
library(dplyr)
library(magrittr)
library(tidyr)
library(DAAG)
library(ggplot2)
library(lubridate)
library(GGally)
Insurance = read.csv('insurance.csv')
Conversion_rates=read.csv('conversion_rates.csv')
Insurance %>%
group_by(region) %>%
summarise(
count = n(),
min = min(charges),
median = median(charges),
mean = mean(charges),
std = sd(charges),
max = max(charges),
IQR = IQR(charges)
) %>%
arrange(desc(median))
Insurance %>%
group_by(region) %>%
summarise(smoker) %>% table()
Insurance %>%
select(smoker, bmi, charges) %>%
ggplot(aes(color = smoker)) +
geom_point(mapping = aes(x = bmi, y = charges))
Insurance %>%
select(children, charges, smoker) %>%
filter(smoker=="yes")%>%
ggplot(aes(x = children, y = charges, group = children)) +
geom_boxplot(outlier.alpha = 0.5, aes(fill = children)) +
theme(legend.position = "none")
model<-lm(charges ~ sex + smoker + age, data = Insurance)
summary(model)
model<-ols_regres(charges ~ sex + smoker + age, data = Insurance)
model<-ols_regres(charges ~ sex + smoker + age, data = Insurance)
model<-ols(charges ~ sex + smoker + age, data = Insurance)
model<-lm(charges ~ sex + smoker + age, data = Insurance)
summary(model)
library(dplyr)
library(magrittr)
library(tidyr)
library(DAAG)
library(ggplot2)
library(lubridate)
library(GGally)
Insurance = read.csv('insurance.csv')
Conversion_rates=read.csv('conversion_rates.csv')
Conversion_rates$converted = ifelse(Conversion_rates$has_insurance == 0 & Conversion_rates$reached_end == 1,1,0 )
Conversion_rates$date <- as.Date(Conversion_rates$date, format = "%Y-%m-%d")
before <- sum(Conversion_rates[which(Conversion_rates$date < ymd('2018-09-05')), 7])
before<- before/nrow(Conversion_rates)
after <- sum(Conversion_rates[which(Conversion_rates$date >= as.Date('2018-09-05')), 7])
after <- after/nrow(Conversion_rates)
View(Insurance)
View(Conversion_rates)
Conversion_rates$converted = ifelse(Conversion_rates$has_insurance == 0 & Conversion_rates$reached_end == 1,1,0 )
Conversion_rates$date <- as.Date(Conversion_rates$date, format = "%Y-%m-%d")
before <- sum(Conversion_rates[which(Conversion_rates$date < ymd('2018-09-05')), 6])
before<- before/nrow(Conversion_rates)
after <- sum(Conversion_rates[which(Conversion_rates$date >= as.Date('2018-09-05')), 6])
after <- after/nrow(Conversion_rates)
altered<-Conversion_rates%>%
filter(date >= as.Date("2018-09-05"))
ggplot(altered, aes(x=came_from, y=reached_end)) +
geom_bar(stat = "identity",width=0.4,fill="cyan")
ggplot(Conversion_rates, aes(x=male, y=converted)) +
geom_bar(stat = "identity",width=0.7,fill="steelblue")
ggplot(altered, aes(x=age, y=converted)) +
geom_bar(stat = "identity",width=0.7,fill="blue")
Insurance.describe()
summary(Insurance)
Insurance %>%
summary(group_by(region))
Insurance %>%
group_by(region) %>%
summary(Insurance)
